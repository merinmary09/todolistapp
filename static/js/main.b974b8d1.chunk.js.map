{"version":3,"sources":["Todos.js","AddForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","todoList","length","map","todo","className","onClick","id","content","AddForm","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addTodo","onSubmit","this","htmlFor","type","onChange","Component","App","filter","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAsBeA,EApBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACbC,EAAWF,EAAMG,OACnBH,EAAMI,KAAI,SAAAC,GACN,OACI,qBAAKC,UAAY,kBAAjB,SACI,uBAAMC,QAAW,WAAKN,EAAWI,EAAKG,KAAtC,cAA8CH,EAAKI,YADbJ,EAAKG,OAOvD,mBAAGF,UAAY,2BAAf,oCAEJ,OACA,qBAAKA,UAAY,uBAAjB,SACCJ,KCaUQ,E,4MA3BXC,MAAQ,CACJF,QAAQ,I,EAEZG,aAAe,SAACC,GACZ,EAAKC,SAAS,CACXL,QAASI,EAAEE,OAAOC,S,EAGzBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,QAAQ,EAAKT,OACxB,EAAKG,SAAS,CACVL,QAAQ,M,uDAIZ,OACI,8BACI,uBAAMY,SAAYC,KAAKL,aAAvB,UACI,uBAAOM,QAAU,OAAjB,0BACA,uBAAOC,KAAO,OAAOC,SAAYH,KAAKV,aAAeI,MAASM,KAAKX,MAAMF,mB,GArBvEiB,aCsCPC,E,4MAlCbhB,MAAO,CACLX,MAAO,I,EAMTC,WAAa,SAACO,GACZ,IAAMR,EAAQ,EAAKW,MAAMX,MAAM4B,QAAO,SAACvB,GACrC,OAAOA,EAAKG,KAAOA,KAErB,EAAKM,SAAS,CACZd,MAAMA,K,EAGVoB,QAAU,SAACf,GACTA,EAAKG,GAAKqB,KAAKC,SACf,IAAI9B,EAAK,sBAAO,EAAKW,MAAMX,OAAlB,CAAyBK,IAClC,EAAKS,SAAS,CACZd,MAAMA,K,uDAKV,OACE,sBAAKM,UAAU,sBAAf,UACC,oBAAIA,UAAY,oBAAhB,oBACC,cAAC,EAAD,CAAON,MAASsB,KAAKX,MAAMX,MAAOC,WAAaqB,KAAKrB,aACpD,cAAC,EAAD,CAASmB,QAAWE,KAAKF,iB,GA7BbM,aCOHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b974b8d1.chunk.js","sourcesContent":[" import React from 'react'\n\nconst Todos = ({todos, deleteTodo}) => {\n    const todoList = todos.length ? (\n        todos.map(todo=>{\n            return(\n                <div className = \"collection item\" key = {todo.id}>\n                    <span onClick = {()=>{deleteTodo(todo.id)}}> {todo.content}</span>\n                </div>\n            )\n        })\n\n    ): (\n        <p className = \" collection item  center\">You have no todos left</p>\n    )\n    return (\n    <div className = \"todos-app container \">\n    {todoList}\n    </div>\n    )\n}\n\nexport default Todos;","import React, { Component } from 'react';\n\nclass AddForm extends Component{\n    state = {\n        content:\"\"\n    }\n    handleChange = (e)=>{\n        this.setState({\n           content: e.target.value \n        })\n    }\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        this.props.addTodo(this.state);\n        this.setState({\n            content:\"\"\n        })\n    }\n    render(){\n        return (\n            <div>\n                <form onSubmit = {this.handleSubmit}>\n                    <label htmlFor = \"item\">Add new todo</label>\n                    <input type = \"text\" onChange = {this.handleChange}  value = {this.state.content}/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddForm;","\nimport React, { Component } from 'react';\nimport Todos from './Todos';\nimport AddForm from './AddForm';\n\nclass App extends Component {\n  state ={\n    todos: [\n      // {id: 1, content: 'Do your homework'},\n      // {id: 2, content: 'Sleep  well'},\n      // {id: 3, content: 'Play go cart'},\n    ]\n  }\n  deleteTodo = (id)=>{\n    const todos = this.state.todos.filter((todo)=>{\n      return todo.id !== id;\n    });\n    this.setState({\n      todos:todos\n    })\n  }\n  addTodo = (todo)=>{\n    todo.id = Math.random();\n    let todos = [...this.state.todos, todo];\n    this.setState({\n      todos:todos\n    })\n  }\n\n  render(){\n  return (\n    <div className=\"todo-app container \">\n     <h1 className = \"center green-text\">Todo's</h1>\n      <Todos todos = {this.state.todos} deleteTodo= {this.deleteTodo}/>\n      <AddForm addTodo = {this.addTodo}/>\n </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}